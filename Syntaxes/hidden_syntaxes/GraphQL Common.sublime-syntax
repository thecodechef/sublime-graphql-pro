%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: GraphQL Common
hidden: true
scope: source.graphql

contexts:

  main:

    - include: reserved_words
    - include: reserved_operator_words
    - include: numbers
    - include: strings
    - include: constants

  reserved_words:
    - match: '^\s*\b(directive(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.directive.graphql
    
    - match: '^\s*\b(extends(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.extends.graphql
    
    - match: '^\s*\b(mutation(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.mutation.graphql
    
    - match: '^\s*\b(query(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.query.graphql
    
    - match: '^\s*\b(subscription(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.subscription.graphql
    
    - match: '^\s*\b(type(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.type.graphql
    
    - match: '^\s*\b(enum(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.enum.graphql
    
    - match: '^\s*\b(scalar(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.scalar.graphql
    
    - match: '^\s*\b(schema(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.schema.graphql
    
    - match: '^\s*\b(fragment(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.fragment.graphql
    
    - match: '^\s*\b(interface(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.interface.graphql
    
    - match: '^\s*\b(input(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.input.graphql
    
    - match: '^\s*\b(union(?!\s*\:|\s*\=))\b'
      scope: keyword.declaration.reserved-words.union.graphql

    - match: '(?<=extends |mutation |query |subscription |type |enum |scalar |schema |fragment |interface |input |union )\w+\b'
      scope: variable.function.reserved-words.type-names.graphql
  
  reserved_operator_words:
    
    - match: '\b(implements)\b'
      scope: keyword.operator.words.reserved-words.implements.graphql
    
    - match: '\b(on)\b'
      scope: keyword.operator.words.reserved-words.on.graphql

    - match: '(?<=implements |on )\w+\b'
      scope: string.unquoted.inherited-class.graphql
  
  numbers:
    
    - match: '(\-)'
      scope: punctuation.terminator.graphql
    
    - match: '([0-9]*)\b'
      scope: constant.numeric.integer.graphql
    
    - match: '([0-9]*\.{1}[0-9]*)\b'
      scope: constant.numeric.float.graphql
  
  strings:
    
    - match: '(\"\"\")'
      scope: punctuation.definition.string.quoted.blocktring.begin.graphql
      push:
        - meta_content_scope: string.quoted.blocktring.graphql
        - match: '\1'
          scope: punctuation.definition.string.quoted.blocktring.end.graphql
          pop: true
    
    - match: '(\")'
      scope: punctuation.definition.string.quoted.double.begin.graphql
      push:
        - meta_content_scope: string.quoted.double.graphql
        - match: '\1'
          scope: punctuation.definition.string.quoted.double.end.graphql
          pop: true

  